using System.Web.Script.Serialization;
using TFramework.Singleton;

namespace TFramework.Utils
{
    public class JsonUtils : AutoGeneratedSingleton<JsonUtils>
    {
        private JavaScriptSerializer m_jsonScript = null;

        public JsonUtils()
        {
            //实例化JavaScriptSerializer类的新实例
            m_jsonScript = new JavaScriptSerializer();
        }
        /// <summary>
        /// Converts the specified JSON string to an object of type T.
        /// </summary>
        /// <typeparam name="T">The type of the resulting object.</typeparam>
        /// <param name="jsonData">The JSON string to be deserialized.</param>
        /// <returns></returns>
        public T JsonToObject<T>(string jsonData)
        {
            return m_jsonScript.Deserialize<T>(jsonData);
        }
        /// <summary>
        /// Converts an object to a JSON string.
        /// </summary>
        /// <param name="objData">The object to serialize.</param>
        /// <returns>The serialized JSON string.</returns>
        public string ObjectToJson(object objData)
        {
            return m_jsonScript.Serialize(objData);
        }
        ~JsonUtils()
        {
            m_jsonScript = null;
        }
    }
}
